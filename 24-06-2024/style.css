  @import url(./css/reset.css);
  @import url(./css/card.css);
  /* STYLE APP */

  /* Utilizzando il display grid.  */
  #app {
      /* impostiamo un'altezza minima */
      min-height: 100dvh;
      display: grid;
      /* In questa maniera definisco le dimensioni di ogni elemeto della riga. 70px header - 1 fraction main, left e right - 100px footer */
      grid-template-rows: auto 1fr auto;
      /* In questa maniera definisco le dimensioni di ogni elemeto della colonna. auto left - 1 fraction main - auto right */
      grid-template-columns: 1fr 3fr 1fr;
      /* Questa proprietÃ  permette di definire i pattern della griglia */
      grid-template-areas:
          "header header header"
          /* riga 1 */
          "left main right"
          /* riga 2 */
          "footer footer footer";
      /* riga  */
  }

  .container {
      width: min(88%, 75rem);
      margin: 0 auto;
  }

  .wrapper {
      display: flex;
      flex-flow: row nowrap;
      gap: 3rem;
      justify-content: space-between;
      align-items: center;
  }

  .logo {
      font-size: 1.5rem;
      text-transform: uppercase;
      letter-spacing: 0.01em;
      font-weight: bold;
  }

  ul.list {
      display: flex;
      flex-flow: row nowrap;
      gap: 0.5rem;
      align-items: center;
  }

  li.item {
      display: block;
  }

  li a {
      display: inline-block;
      padding: 0.7rem 0;
      color: inherit;
  }

  #app>.header {
      background: red;

      /* In questa maniera diciamo che l'elemento occupa dalla colonna 1 alla colonna 4 */
      grid-column: 1 / 4;
      padding: 24px;

      /* utilizzando grid-template-areas dobbiamo definire chi sono gli elementi della grid */
      grid-area: header;
  }


  main {
      padding: 16px;
      background: white;
      grid-column: 2 / 3;
      grid-area: main;
      overflow-y: auto;
  }

  .left {
      display: flex;
      justify-content: space-around;
      background: orange;
      grid-column: 1 / 2;
      grid-area: left;
      overflow: auto;
  }


  #app>.right {
      background: green;
      grid-column: 3 / 4;
      grid-area: right;
      overflow: auto;

  }

  #app>.footer {
      background: blue;
      grid-column: 1 / 4;
      padding: 24px;
      grid-area: footer;
  }

  .footer {
      padding: 2rem 0 4rem;
  }

  .footer .nav {
      flex: 1;
  }

  .footer .menu {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
  }

  /* tablet breakpoint. Le colonne left e right hanno larghezza 50% in modo da disposrsi sotto il main */
  @media (min-width: 768px)
  /* and (max-width: 1024px) */
      {

      #app {
          grid-template-rows: auto 1fr 1fr auto;

          grid-template-columns: 1fr 1fr;

          grid-template-areas:
              "header header "
              /* riga 1 */
              " main main"
              /* riga 2 */
              "left right"
              /* riga 3 */
              "footer footer";
          /* riga 4 */
      }
  }

  @media (max-width: 768px) {

      #app {
          grid-template-rows: auto 50dvh 1fr 1fr auto;

          grid-template-columns: 1fr;

          grid-template-areas:
              "header"
              /* riga 1 */
              "main"
              /* riga 2 */
              "left"
              /* riga 3 */
              "right"
              /* riga 4 */
              "footer";
          /* riga 5 */
      }
  }